{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\resume-review-app\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  history\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"student\"\n  });\n  const changeHandler = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const signup = async () => {\n    // console.log(\"signup xe\",formData);\n    let responseData;\n    await fetch(Api_URL + `/register`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => responseData = data);\n    if (responseData.success) {\n      localStorage.setItem('auth-token', responseData.token);\n      window.location.replace(\"/\");\n    } else {\n      alert(responseData.errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: signup,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      value: formData.name,\n      onChange: changeHandler,\n      type: \"text\",\n      placeholder: \"Your Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      value: formData.email,\n      onChange: changeHandler,\n      type: \"email\",\n      placeholder: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      value: formData.password,\n      onChange: changeHandler,\n      type: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: role,\n      onChange: cha,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"student\",\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"expert\",\n        children: \"Expert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"7+dva6tpuQck4mN1TofSJRXEeD8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","history","_s","formData","setFormData","name","email","password","role","changeHandler","e","target","value","signup","responseData","fetch","Api_URL","method","headers","Accept","body","JSON","stringify","then","response","json","data","success","localStorage","setItem","token","window","location","replace","alert","errors","onSubmit","children","onChange","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","cha","_c","$RefreshReg$"],"sources":["C:/Users/rohit/resume-review-app/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst Register = ({ history }) => {\r\n   \r\n \r\n    const [formData,setFormData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        role:\"student\"\r\n    });\r\n    const changeHandler = (e)=>{\r\n        setFormData({...formData,[e.target.name]: e.target.value})\r\n    }\r\n    \r\n    const signup = async ()=>{\r\n        // console.log(\"signup xe\",formData);\r\n        let responseData;\r\n        await fetch(Api_URL+`/register`,{\r\n            method:'POST',\r\n            headers:{\r\n                Accept:'application/json',\r\n                'Content-Type':'application/json'\r\n                 },\r\n                 body:JSON.stringify(formData)\r\n        }).then((response)=>response.json()).then((data)=>responseData=data);\r\n        if(responseData.success){\r\n            localStorage.setItem('auth-token',responseData.token);\r\n            window.location.replace(\"/\");\r\n        }\r\n        else{\r\n            alert(responseData.errors)\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={signup}>\r\n            \r\n<input name=\"name\"value={formData.name} onChange={changeHandler} type=\"text\" placeholder=\"Your Name\" />\r\n  <input  name=\"email\"value={formData.email} onChange={changeHandler} type=\"email\" placeholder=\"Email Address\" />\r\n  <input  name=\"password\"value={formData.password} onChange={changeHandler} type=\"password\" placeholder=\"Password\" />\r\n\r\n\r\n            <select value={role} onChange={cha}>\r\n                <option value=\"student\">Student</option>\r\n                <option value=\"expert\">Expert</option>\r\n            </select>\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}