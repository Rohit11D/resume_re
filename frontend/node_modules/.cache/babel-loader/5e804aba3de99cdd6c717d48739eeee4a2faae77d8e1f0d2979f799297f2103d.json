{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\resume-review-app\\\\frontend\\\\src\\\\components\\\\UploadResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Api_URL = \"http://localhost:5000\";\nconst UploadResume = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const uploadHandler = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('resume', file);\n    try {\n      const token = localStorage.getItem('auth-token');\n      const response = await fetch(Api_URL + `/upload`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Include token in headers\n          'Accept': 'application/json',\n          'Content-Type': 'multipart/form-data'\n        },\n        body: formData\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        alert('Resume uploaded successfully');\n      } else {\n        alert(responseData.message || 'Error uploading resume');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error uploading resume');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: uploadHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadResume, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadResume;\nexport default UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Api_URL","UploadResume","_s","file","setFile","uploadHandler","e","preventDefault","formData","FormData","append","token","localStorage","getItem","response","fetch","method","headers","body","responseData","json","ok","alert","message","error","console","onSubmit","children","type","onChange","target","files","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rohit/resume-review-app/frontend/src/components/UploadResume.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Api_URL = \"http://localhost:5000\";\r\n\r\nconst UploadResume = () => {\r\n    const [file, setFile] = useState(null);\r\n\r\n    const uploadHandler = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('resume', file);\r\n\r\n        try {\r\n            const token = localStorage.getItem('auth-token');\r\n    \r\n            const response = await fetch(Api_URL + `/upload`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`, // Include token in headers\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                body: formData\r\n            });\r\n\r\n            const responseData = await response.json();\r\n            if (response.ok) {\r\n                alert('Resume uploaded successfully');\r\n            } else {\r\n                alert(responseData.message || 'Error uploading resume');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Error uploading resume');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={uploadHandler}>\r\n            <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n            <button type=\"submit\">Upload Resume</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UploadResume;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,aAAa,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEP,IAAI,CAAC;IAE/B,IAAI;MACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAEhD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACf,OAAO,GAAG,SAAS,EAAE;QAC9CgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUN,KAAK,EAAE;UAAE;UACpC,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDO,IAAI,EAAEV;MACV,CAAC,CAAC;MAEF,MAAMW,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACbC,KAAK,CAAC,8BAA8B,CAAC;MACzC,CAAC,MAAM;QACHA,KAAK,CAACH,YAAY,CAACI,OAAO,IAAI,wBAAwB,CAAC;MAC3D;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBF,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAM2B,QAAQ,EAAErB,aAAc;IAAAsB,QAAA,gBAC1B5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGvB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEpC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEf,CAAC;AAACjC,EAAA,CAvCID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}